name: Build cB (dispatched)

on:
  repository_dispatch:
    types: [ adi-resource-trigger ]

# Required so we can checkout code and read other runs/artifacts.
permissions:
  contents: read
  actions: read

jobs:
  build-cb:
    runs-on: ${{ github.event.client_payload.runner_os || 'ubuntu-latest' }}
    timeout-minutes: 60
    steps:
      - name: Run the action
        run: echo "Running on ${{ runner.os }}"
      - name: Extract and validate payload
        id: p
        shell: bash
        run: |
          set -euo pipefail
          # Pull from the client payload sent by Master
          echo "source_repo=${{ github.event.client_payload.source_repo }}"     >> "$GITHUB_OUTPUT"
          echo "source_run_id=${{ github.event.client_payload.source_run_id }}" >> "$GITHUB_OUTPUT"
          echo "source_sha=${{ github.event.client_payload.source_sha }}"       >> "$GITHUB_OUTPUT"
          echo "artifact_name=${{ github.event.client_payload.artifact_name }}" >> "$GITHUB_OUTPUT"
          echo "target_branch_b=${{ github.event.client_payload.target_branch_b }}" >> "$GITHUB_OUTPUT"

          # Minimal validation
          for k in source_repo source_run_id source_sha artifact_name target_branch_b; do
            v=$(grep "^$k=" "$GITHUB_OUTPUT" | sed "s/^$k=//")
            if [[ -z "$v" ]]; then
              echo "::error title=Missing payload field::$k was not provided in repository_dispatch payload."
              exit 1
            fi
          done

      - name: Checkout Repo B at mapped branch
        uses: actions/checkout@v4
        with:
          # Branch mapping (e.g., v0 -> v0b, v2 -> v2b) is computed in Master and sent as target_branch_b
          ref: ${{ steps.p.outputs.target_branch_b }}
          fetch-depth: 0
          
      - name: Download artifact from Master
        env:
          GH_TOKEN: ${{ secrets.GIT_TOKEN  }}  # must have read perms in Master
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p ca-input
          gh run download "${{ steps.p.outputs.source_run_id }}" \
            -R "${{ steps.p.outputs.source_repo }}" \
            -n "${{ steps.p.outputs.artifact_name }}" \
            -D ./ca-input
          echo "Downloaded files:"
          ls -la ./ca-input

      - name: Build cB using cA artifact
        shell: bash
        run: |
          set -euo pipefail
          # >>> Replace with your real build <<<
          mkdir -p out
          echo "Slave-built-using-artifacts-from-${{ steps.p.outputs.source_repo }}@${{ steps.p.outputs.source_sha }}" > out/cb.bin
          # <<< Replace with your real build <<<

      - name: Report back to Main Repo commit status
        uses: liviutomoiaga/shared_action/cascade-build-reporter@main
        if: always()
        with:
          op: report
          status_context: adi-resource-build
          report_state: ${{ job.status }}
          report_target_url: adi-resource-trigger
          resource_repo_branch: ${{ steps.map.outputs.b_branch }}
          status_pat: ${{ secrets.GIT_TOKEN }}

